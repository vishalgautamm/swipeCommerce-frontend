{
  "displayName": "Header",
  "props": [
    {
      "type": "custom",
      "required": false,
      "description": [
        "An element type to render as (string or function)."
      ],
      "tags": [],
      "name": "as"
    },
    {
      "type": "bool|enum",
      "required": false,
      "description": [
        "Attach header  to other content, like a segment."
      ],
      "tags": [],
      "value": [
        "top",
        "bottom"
      ],
      "name": "attached"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "Format header to appear inside a content block."
      ],
      "tags": [],
      "name": "block"
    },
    {
      "type": "node",
      "required": false,
      "description": [
        "Primary content."
      ],
      "tags": [],
      "name": "children"
    },
    {
      "type": "string",
      "required": false,
      "description": [
        "Additional classes."
      ],
      "tags": [],
      "name": "className"
    },
    {
      "type": "enum",
      "required": false,
      "description": [
        "Color of the header."
      ],
      "tags": [],
      "value": [
        "red",
        "orange",
        "yellow",
        "olive",
        "green",
        "teal",
        "blue",
        "violet",
        "purple",
        "pink",
        "brown",
        "grey",
        "black"
      ],
      "name": "color"
    },
    {
      "type": "custom",
      "required": false,
      "description": [
        "Shorthand for primary content."
      ],
      "tags": [],
      "name": "content"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "Show that the header is inactive."
      ],
      "tags": [],
      "name": "disabled"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "Divide header from the content below it."
      ],
      "tags": [],
      "name": "dividing"
    },
    {
      "type": "enum",
      "required": false,
      "description": [
        "Header can sit to the left or right of other content."
      ],
      "tags": [],
      "value": [
        "left",
        "right"
      ],
      "name": "floated"
    },
    {
      "type": "custom",
      "required": false,
      "description": [
        "Add an icon by icon name or pass an Icon."
      ],
      "tags": [],
      "name": "icon"
    },
    {
      "type": "custom",
      "required": false,
      "description": [
        "Add an image by img src or pass an Image."
      ],
      "tags": [],
      "name": "image"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "Inverts the color of the header for dark backgrounds."
      ],
      "tags": [],
      "name": "inverted"
    },
    {
      "type": "enum",
      "required": false,
      "description": [
        "Content headings are sized with em and are based on the font-size of their container."
      ],
      "tags": [],
      "value": [
        "tiny",
        "small",
        "medium",
        "large",
        "huge"
      ],
      "name": "size"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "Headers may be formatted to label smaller or de-emphasized content."
      ],
      "tags": [],
      "name": "sub"
    },
    {
      "type": "custom",
      "required": false,
      "description": [
        "Shorthand for Header.Subheader."
      ],
      "tags": [],
      "name": "subheader"
    },
    {
      "type": "enum",
      "required": false,
      "description": [
        "Align header content."
      ],
      "tags": [],
      "value": [
        "left",
        "center",
        "right",
        "justified"
      ],
      "name": "textAlign"
    }
  ],
  "constructorName": "Header",
  "type": "element",
  "isParent": true,
  "isChild": false,
  "parentDisplayName": null,
  "subcomponentName": null,
  "subcomponents": [
    "HeaderContent",
    "HeaderSubheader"
  ],
  "apiPath": "Header",
  "componentClassName": "header",
  "docblock": {
    "tags": [],
    "description": [
      "A header provides a short summary of content"
    ]
  },
  "examplesExist": true,
  "repoPath": "src/elements/Header/Header.js",
  "filename": "Header.js",
  "filenameWithoutExt": "Header"
}