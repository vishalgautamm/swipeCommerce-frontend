{
  "displayName": "Button",
  "props": [
    {
      "type": "bool",
      "required": false,
      "description": [
        "A button can show it is currently the active user selection."
      ],
      "tags": [],
      "name": "active"
    },
    {
      "type": "bool|enum",
      "required": false,
      "description": [
        "A button can animate to show hidden content."
      ],
      "tags": [],
      "value": [
        "fade",
        "vertical"
      ],
      "name": "animated"
    },
    {
      "type": "custom",
      "required": false,
      "description": [
        "An element type to render as (string or function)."
      ],
      "defaultValue": "'button'",
      "tags": [],
      "name": "as"
    },
    {
      "type": "bool|enum",
      "required": false,
      "description": [
        "A button can be attached to other content."
      ],
      "tags": [],
      "value": [
        "left",
        "right",
        "top",
        "bottom"
      ],
      "name": "attached"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "A basic button is less pronounced."
      ],
      "tags": [],
      "name": "basic"
    },
    {
      "type": "custom",
      "required": false,
      "description": [
        "Primary content."
      ],
      "tags": [],
      "name": "children"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "A button can be circular."
      ],
      "tags": [],
      "name": "circular"
    },
    {
      "type": "string",
      "required": false,
      "description": [
        "Additional classes."
      ],
      "tags": [],
      "name": "className"
    },
    {
      "type": "enum",
      "required": false,
      "description": [
        "A button can have different colors"
      ],
      "tags": [],
      "value": [
        "red",
        "orange",
        "yellow",
        "olive",
        "green",
        "teal",
        "blue",
        "violet",
        "purple",
        "pink",
        "brown",
        "grey",
        "black",
        "facebook",
        "google plus",
        "instagram",
        "linkedin",
        "twitter",
        "vk",
        "youtube"
      ],
      "name": "color"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "A button can reduce its padding to fit into tighter spaces."
      ],
      "tags": [],
      "name": "compact"
    },
    {
      "type": "custom",
      "required": false,
      "description": [
        "Shorthand for primary content."
      ],
      "tags": [],
      "name": "content"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "A button can show it is currently unable to be interacted with."
      ],
      "tags": [],
      "name": "disabled"
    },
    {
      "type": "enum",
      "required": false,
      "description": [
        "A button can be aligned to the left or right of its container."
      ],
      "tags": [],
      "value": [
        "left",
        "right"
      ],
      "name": "floated"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "A button can take the width of its container."
      ],
      "tags": [],
      "name": "fluid"
    },
    {
      "type": "custom",
      "required": false,
      "description": [
        "Add an Icon by name, props object, or pass an <Icon />."
      ],
      "tags": [],
      "name": "icon"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "A button can be formatted to appear on dark backgrounds."
      ],
      "tags": [],
      "name": "inverted"
    },
    {
      "type": "custom",
      "required": false,
      "description": [
        "Add a Label by text, props object, or pass a <Label />."
      ],
      "tags": [],
      "name": "label"
    },
    {
      "type": "enum",
      "required": false,
      "description": [
        "A labeled button can format a Label or Icon to appear on the left or right."
      ],
      "tags": [],
      "value": [
        "right",
        "left"
      ],
      "name": "labelPosition"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "A button can show a loading indicator."
      ],
      "tags": [],
      "name": "loading"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "A button can hint towards a negative consequence."
      ],
      "tags": [],
      "name": "negative"
    },
    {
      "type": "func",
      "required": false,
      "description": [
        "Called after user's click."
      ],
      "tags": [
        {
          "title": "param",
          "description": "React's original SyntheticEvent.",
          "type": {
            "type": "NameExpression",
            "name": "SyntheticEvent"
          },
          "name": "event"
        },
        {
          "title": "param",
          "description": "All props.",
          "type": {
            "type": "NameExpression",
            "name": "object"
          },
          "name": "data"
        }
      ],
      "name": "onClick"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "A button can hint towards a positive consequence."
      ],
      "tags": [],
      "name": "positive"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "A button can be formatted to show different levels of emphasis."
      ],
      "tags": [],
      "name": "primary"
    },
    {
      "type": "string",
      "required": false,
      "description": [
        "The role of the HTML element."
      ],
      "defaultValue": "'button'",
      "tags": [],
      "name": "role"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "A button can be formatted to show different levels of emphasis."
      ],
      "tags": [],
      "name": "secondary"
    },
    {
      "type": "enum",
      "required": false,
      "description": [
        "A button can have different sizes."
      ],
      "tags": [],
      "value": [
        "mini",
        "tiny",
        "small",
        "medium",
        "large",
        "big",
        "huge",
        "massive"
      ],
      "name": "size"
    },
    {
      "type": "number|string",
      "required": false,
      "description": [
        "A button can receive focus."
      ],
      "tags": [],
      "value": [],
      "name": "tabIndex"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "A button can be formatted to toggle on and off."
      ],
      "tags": [],
      "name": "toggle"
    }
  ],
  "constructorName": "Button",
  "type": "element",
  "isParent": true,
  "isChild": false,
  "parentDisplayName": null,
  "subcomponentName": null,
  "subcomponents": [
    "ButtonContent",
    "ButtonGroup",
    "ButtonOr"
  ],
  "apiPath": "Button",
  "componentClassName": "button",
  "docblock": {
    "tags": [
      {
        "title": "see",
        "description": "Form"
      },
      {
        "title": "see",
        "description": "Icon"
      },
      {
        "title": "see",
        "description": "Label"
      }
    ],
    "description": [
      "A Button indicates a possible user action."
    ]
  },
  "examplesExist": true,
  "repoPath": "src/elements/Button/Button.js",
  "filename": "Button.js",
  "filenameWithoutExt": "Button"
}