{
  "displayName": "Input",
  "props": [
    {
      "type": "bool|custom",
      "required": false,
      "description": [
        "An Input can be formatted to alert the user to an action they may perform."
      ],
      "tags": [],
      "value": [],
      "name": "action"
    },
    {
      "type": "enum",
      "required": false,
      "description": [
        "An action can appear along side an Input on the left or right."
      ],
      "tags": [],
      "value": [
        "left"
      ],
      "name": "actionPosition"
    },
    {
      "type": "custom",
      "required": false,
      "description": [
        "An element type to render as (string or function)."
      ],
      "tags": [],
      "name": "as"
    },
    {
      "type": "node",
      "required": false,
      "description": [
        "Primary content."
      ],
      "tags": [],
      "name": "children"
    },
    {
      "type": "string",
      "required": false,
      "description": [
        "Additional classes."
      ],
      "tags": [],
      "name": "className"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "An Input field can show that it is disabled."
      ],
      "tags": [],
      "name": "disabled"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "An Input field can show the data contains errors."
      ],
      "tags": [],
      "name": "error"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "Take on the size of its container."
      ],
      "tags": [],
      "name": "fluid"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "An Input field can show a user is currently interacting with it."
      ],
      "tags": [],
      "name": "focus"
    },
    {
      "type": "bool|custom",
      "required": false,
      "description": [
        "Optional Icon to display inside the Input."
      ],
      "tags": [],
      "value": [],
      "name": "icon"
    },
    {
      "type": "enum",
      "required": false,
      "description": [
        "An Icon can appear inside an Input on the left or right."
      ],
      "tags": [],
      "value": [
        "left"
      ],
      "name": "iconPosition"
    },
    {
      "type": "custom",
      "required": false,
      "description": [
        "Shorthand for creating the HTML Input."
      ],
      "tags": [],
      "name": "input"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "Format to appear on dark backgrounds."
      ],
      "tags": [],
      "name": "inverted"
    },
    {
      "type": "custom",
      "required": false,
      "description": [
        "Optional Label to display along side the Input."
      ],
      "tags": [],
      "name": "label"
    },
    {
      "type": "enum",
      "required": false,
      "description": [
        "A Label can appear outside an Input on the left or right."
      ],
      "tags": [],
      "value": [
        "left",
        "right",
        "left corner",
        "right corner"
      ],
      "name": "labelPosition"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "An Icon Input field can show that it is currently loading data."
      ],
      "tags": [],
      "name": "loading"
    },
    {
      "type": "func",
      "required": false,
      "description": [
        "Called on change."
      ],
      "tags": [
        {
          "title": "param",
          "description": "React's original SyntheticEvent.",
          "type": {
            "type": "NameExpression",
            "name": "SyntheticEvent"
          },
          "name": "event"
        },
        {
          "title": "param",
          "description": "All props and proposed value.",
          "type": {
            "type": "NameExpression",
            "name": "object"
          },
          "name": "data"
        }
      ],
      "name": "onChange"
    },
    {
      "type": "enum",
      "required": false,
      "description": [
        "An Input can vary in size."
      ],
      "tags": [],
      "value": [
        "mini",
        "tiny",
        "small",
        "medium",
        "large",
        "big",
        "huge",
        "massive"
      ],
      "name": "size"
    },
    {
      "type": "number|string",
      "required": false,
      "description": [
        "An Input can receive focus."
      ],
      "tags": [],
      "value": [],
      "name": "tabIndex"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "Transparent Input has no background."
      ],
      "tags": [],
      "name": "transparent"
    },
    {
      "type": "string",
      "required": false,
      "description": [
        "The HTML input type."
      ],
      "defaultValue": "'text'",
      "tags": [],
      "name": "type"
    }
  ],
  "constructorName": "Input",
  "type": "element",
  "isParent": true,
  "isChild": false,
  "parentDisplayName": null,
  "subcomponentName": null,
  "subcomponents": [],
  "apiPath": "Input",
  "componentClassName": "input",
  "docblock": {
    "tags": [
      {
        "title": "see",
        "description": "Button"
      },
      {
        "title": "see",
        "description": "Form"
      },
      {
        "title": "see",
        "description": "Icon"
      },
      {
        "title": "see",
        "description": "Label"
      }
    ],
    "description": [
      "An Input is a field used to elicit a response from a user."
    ]
  },
  "examplesExist": true,
  "repoPath": "src/elements/Input/Input.js",
  "filename": "Input.js",
  "filenameWithoutExt": "Input"
}