{
  "displayName": "Search",
  "props": [
    {
      "type": "string",
      "required": false,
      "description": [
        "A search can have its results aligned to its left or right container edge."
      ],
      "tags": [],
      "name": "aligned"
    },
    {
      "type": "custom",
      "required": false,
      "description": [
        "An element type to render as (string or function)."
      ],
      "tags": [],
      "name": "as"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "A search can display results from remote content ordered by categories."
      ],
      "tags": [],
      "name": "category"
    },
    {
      "type": "func",
      "required": false,
      "description": [
        "Renders the SearchCategory contents."
      ],
      "tags": [
        {
          "title": "param",
          "description": "The SearchCategory props object.",
          "type": {
            "type": "NameExpression",
            "name": "object"
          },
          "name": "props"
        },
        {
          "title": "returns",
          "description": "Renderable SearchCategory contents.",
          "type": {
            "type": "AllLiteral"
          }
        }
      ],
      "name": "categoryRenderer"
    },
    {
      "type": "string",
      "required": false,
      "description": [
        "Additional classes."
      ],
      "tags": [],
      "name": "className"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "Initial value of open."
      ],
      "tags": [],
      "name": "defaultOpen"
    },
    {
      "type": "string",
      "required": false,
      "description": [
        "Initial value."
      ],
      "tags": [],
      "name": "defaultValue"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "A search can have its results take up the width of its container."
      ],
      "tags": [],
      "name": "fluid"
    },
    {
      "type": "node|object",
      "required": false,
      "description": [
        "Shorthand for Icon."
      ],
      "defaultValue": "'search'",
      "tags": [],
      "value": [],
      "name": "icon"
    },
    {
      "type": "custom",
      "required": false,
      "description": [
        "A search input can take up the width of its container."
      ],
      "defaultValue": "'text'",
      "tags": [],
      "name": "input"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "A search can show a loading indicator."
      ],
      "tags": [],
      "name": "loading"
    },
    {
      "type": "number",
      "required": false,
      "description": [
        "Minimum characters to query for results"
      ],
      "defaultValue": "1",
      "tags": [],
      "name": "minCharacters"
    },
    {
      "type": "node",
      "required": false,
      "description": [
        "Additional text for \"No Results\" message with less emphasis."
      ],
      "tags": [],
      "name": "noResultsDescription"
    },
    {
      "type": "node",
      "required": false,
      "description": [
        "Message to display when there are no results."
      ],
      "defaultValue": "'No results found.'",
      "tags": [],
      "name": "noResultsMessage"
    },
    {
      "type": "func",
      "required": false,
      "description": [
        "Called on blur."
      ],
      "tags": [
        {
          "title": "param",
          "description": "React's original SyntheticEvent.",
          "type": {
            "type": "NameExpression",
            "name": "SyntheticEvent"
          },
          "name": "event"
        },
        {
          "title": "param",
          "description": "All props.",
          "type": {
            "type": "NameExpression",
            "name": "object"
          },
          "name": "data"
        }
      ],
      "name": "onBlur"
    },
    {
      "type": "func",
      "required": false,
      "description": [
        "Called on focus."
      ],
      "tags": [
        {
          "title": "param",
          "description": "React's original SyntheticEvent.",
          "type": {
            "type": "NameExpression",
            "name": "SyntheticEvent"
          },
          "name": "event"
        },
        {
          "title": "param",
          "description": "All props.",
          "type": {
            "type": "NameExpression",
            "name": "object"
          },
          "name": "data"
        }
      ],
      "name": "onFocus"
    },
    {
      "type": "func",
      "required": false,
      "description": [
        "Called on mousedown."
      ],
      "tags": [
        {
          "title": "param",
          "description": "React's original SyntheticEvent.",
          "type": {
            "type": "NameExpression",
            "name": "SyntheticEvent"
          },
          "name": "event"
        },
        {
          "title": "param",
          "description": "All props.",
          "type": {
            "type": "NameExpression",
            "name": "object"
          },
          "name": "data"
        }
      ],
      "name": "onMouseDown"
    },
    {
      "type": "func",
      "required": false,
      "description": [
        "Called when a result is selected."
      ],
      "tags": [
        {
          "title": "param",
          "description": "React's original SyntheticEvent.",
          "type": {
            "type": "NameExpression",
            "name": "SyntheticEvent"
          },
          "name": "event"
        },
        {
          "title": "param",
          "description": "All props.",
          "type": {
            "type": "NameExpression",
            "name": "object"
          },
          "name": "data"
        }
      ],
      "name": "onResultSelect"
    },
    {
      "type": "func",
      "required": false,
      "description": [
        "Called on search input change."
      ],
      "tags": [
        {
          "title": "param",
          "description": "React's original SyntheticEvent.",
          "type": {
            "type": "NameExpression",
            "name": "SyntheticEvent"
          },
          "name": "event"
        },
        {
          "title": "param",
          "description": "All props, includes current value of search input.",
          "type": {
            "type": "NameExpression",
            "name": "object"
          },
          "name": "data"
        }
      ],
      "name": "onSearchChange"
    },
    {
      "type": "func",
      "required": false,
      "description": [
        "Called when the active selection index is changed."
      ],
      "tags": [
        {
          "title": "param",
          "description": "React's original SyntheticEvent.",
          "type": {
            "type": "NameExpression",
            "name": "SyntheticEvent"
          },
          "name": "event"
        },
        {
          "title": "param",
          "description": "All props.",
          "type": {
            "type": "NameExpression",
            "name": "object"
          },
          "name": "data"
        }
      ],
      "name": "onSelectionChange"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "Controls whether or not the results menu is displayed."
      ],
      "tags": [],
      "name": "open"
    },
    {
      "type": "func",
      "required": false,
      "description": [
        "Renders the SearchResult contents."
      ],
      "tags": [
        {
          "title": "param",
          "description": "The SearchResult props object.",
          "type": {
            "type": "NameExpression",
            "name": "object"
          },
          "name": "props"
        },
        {
          "title": "returns",
          "description": "Renderable SearchResult contents.",
          "type": {
            "type": "AllLiteral"
          }
        }
      ],
      "name": "resultRenderer"
    },
    {
      "type": "arrayOf|shape",
      "required": false,
      "description": [
        "One of:",
        "- array of Search.Result props e.g. `{ title: '', description: '' }` or",
        "- object of categories e.g. `{ name: '', results: [{ title: '', description: '' }]`"
      ],
      "tags": [],
      "value": [],
      "name": "results"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "Whether the search should automatically select the first result after searching."
      ],
      "tags": [],
      "name": "selectFirstResult"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "Whether a \"no results\" message should be shown if no results are found."
      ],
      "defaultValue": "true",
      "tags": [],
      "name": "showNoResults"
    },
    {
      "type": "enum",
      "required": false,
      "description": [
        "A search can have different sizes."
      ],
      "tags": [],
      "value": [
        "mini",
        "tiny",
        "small",
        "large",
        "big",
        "huge",
        "massive"
      ],
      "name": "size"
    },
    {
      "type": "string",
      "required": false,
      "description": [
        "Current value of the search input. Creates a controlled component."
      ],
      "tags": [],
      "name": "value"
    }
  ],
  "constructorName": "Search",
  "type": "module",
  "isParent": true,
  "isChild": false,
  "parentDisplayName": null,
  "subcomponentName": null,
  "subcomponents": [
    "SearchCategory",
    "SearchResult",
    "SearchResults"
  ],
  "apiPath": "Search",
  "componentClassName": "search",
  "docblock": {
    "tags": [],
    "description": [
      "A search module allows a user to query for results from a selection of data"
    ]
  },
  "examplesExist": true,
  "repoPath": "src/modules/Search/Search.js",
  "filename": "Search.js",
  "filenameWithoutExt": "Search"
}