{
  "displayName": "SearchResult",
  "props": [
    {
      "type": "bool",
      "required": false,
      "description": [
        "The item currently selected by keyboard shortcut."
      ],
      "tags": [],
      "name": "active"
    },
    {
      "type": "custom",
      "required": false,
      "description": [
        "An element type to render as (string or function)."
      ],
      "tags": [],
      "name": "as"
    },
    {
      "type": "string",
      "required": false,
      "description": [
        "Additional classes."
      ],
      "tags": [],
      "name": "className"
    },
    {
      "type": "custom",
      "required": false,
      "description": [
        "Shorthand for primary content."
      ],
      "tags": [],
      "name": "content"
    },
    {
      "type": "string",
      "required": false,
      "description": [
        "Additional text with less emphasis."
      ],
      "tags": [],
      "name": "description"
    },
    {
      "type": "number|string",
      "required": false,
      "description": [
        "A unique identifier."
      ],
      "tags": [],
      "value": [],
      "name": "id"
    },
    {
      "type": "string",
      "required": false,
      "description": [
        "Add an image to the item."
      ],
      "tags": [],
      "name": "image"
    },
    {
      "type": "func",
      "required": false,
      "description": [
        "Called on click."
      ],
      "tags": [
        {
          "title": "param",
          "description": "React's original SyntheticEvent.",
          "type": {
            "type": "NameExpression",
            "name": "SyntheticEvent"
          },
          "name": "event"
        },
        {
          "title": "param",
          "description": "All props.",
          "type": {
            "type": "NameExpression",
            "name": "object"
          },
          "name": "data"
        }
      ],
      "name": "onClick"
    },
    {
      "type": "string",
      "required": false,
      "description": [
        "Customized text for price."
      ],
      "tags": [],
      "name": "price"
    },
    {
      "type": "func",
      "required": false,
      "description": [
        "Renders the result contents."
      ],
      "defaultValue": "({ image, price, title, description }) => [\n  image && (\n    <div key='image' className='image'>\n      {createHTMLImage(image, { autoGenerateKey: false })}\n    </div>\n  ),\n  <div key='content' className='content'>\n    {price && <div className='price'>{price}</div>}\n    {title && <div className='title'>{title}</div>}\n    {description && <div className='description'>{description}</div>}\n  </div>,\n]",
      "tags": [
        {
          "title": "param",
          "description": "The SearchResult props object.",
          "type": {
            "type": "NameExpression",
            "name": "object"
          },
          "name": "props"
        },
        {
          "title": "returns",
          "description": "Renderable result contents.",
          "type": {
            "type": "AllLiteral"
          }
        }
      ],
      "name": "renderer"
    },
    {
      "type": "string",
      "required": true,
      "description": [
        "Display title."
      ],
      "tags": [],
      "name": "title"
    }
  ],
  "constructorName": "SearchResult",
  "type": "module",
  "isParent": false,
  "isChild": true,
  "parentDisplayName": "Search",
  "subcomponentName": "Result",
  "subcomponents": null,
  "apiPath": "Search.Result",
  "componentClassName": "result",
  "docblock": {
    "tags": [],
    "description": [
      ""
    ]
  },
  "examplesExist": false,
  "repoPath": "src/modules/Search/SearchResult.js",
  "filename": "SearchResult.js",
  "filenameWithoutExt": "SearchResult"
}