{
  "displayName": "Responsive",
  "props": [
    {
      "type": "custom",
      "required": false,
      "description": [
        "An element type to render as (string or function)."
      ],
      "tags": [],
      "name": "as"
    },
    {
      "type": "node",
      "required": false,
      "description": [
        "Primary content."
      ],
      "tags": [],
      "name": "children"
    },
    {
      "type": "bool",
      "required": false,
      "description": [
        "Fires callbacks immediately after mount."
      ],
      "tags": [],
      "name": "fireOnMount"
    },
    {
      "type": "func",
      "required": false,
      "description": [
        "Called to get width of screen. Defaults to using `window.innerWidth` when in a browser;",
        "otherwise, assumes a width of 0."
      ],
      "defaultValue": "() => (isBrowser() ? window.innerWidth : 0)",
      "tags": [],
      "name": "getWidth"
    },
    {
      "type": "number|string",
      "required": false,
      "description": [
        "The maximum width at which content will be displayed."
      ],
      "tags": [],
      "value": [],
      "name": "maxWidth"
    },
    {
      "type": "number|string",
      "required": false,
      "description": [
        "The minimum width at which content will be displayed."
      ],
      "tags": [],
      "value": [],
      "name": "minWidth"
    },
    {
      "type": "func",
      "required": false,
      "description": [
        "Called on update."
      ],
      "tags": [
        {
          "title": "param",
          "description": "The React SyntheticEvent object",
          "type": {
            "type": "NameExpression",
            "name": "SyntheticEvent"
          },
          "name": "event"
        },
        {
          "title": "param",
          "description": "All props and the event value.",
          "type": {
            "type": "NameExpression",
            "name": "object"
          },
          "name": "data"
        }
      ],
      "name": "onUpdate"
    }
  ],
  "constructorName": "Responsive",
  "type": "addon",
  "isParent": true,
  "isChild": false,
  "parentDisplayName": null,
  "subcomponentName": null,
  "subcomponents": [],
  "apiPath": "Responsive",
  "componentClassName": "responsive",
  "docblock": {
    "tags": [],
    "description": [
      "Responsive can control visibility of content."
    ]
  },
  "examplesExist": true,
  "repoPath": "src/addons/Responsive/Responsive.js",
  "filename": "Responsive.js",
  "filenameWithoutExt": "Responsive"
}